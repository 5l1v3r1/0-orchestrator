#%RAML 1.0
title: G8OS Stateless GRID API
version: v0.1.0
mediaType:  application/json


types:
  Node:
    type: object
    properties:
      id: string
      hostname: string


  CPU:
    type: object
    properties:
      cacheSize: integer
      coreId: integer
      cores: integer
      cpu: integer
      family: string
      flags: string[]
      mhz: number

  Memory:
    type: object
    properties:

  KVMCPU:
    type: object
    description: Definition of a virtual cpu
    properties:

  KVMNICZerotierConfiguration:
    type: object
    description: Virtual nic zerotier configuration
    properties:
      id:
        type: string
        description: Zerotier network id

  KVMNICVxLANConfiguration:
    type: object
    description: Virtual nic zerotier configuration
    properties:
      id:
        type: integer
        description: VxLAN id

  KVMNIC:
    type: object
    description: Definition of a virtual nic
    properties:
      type:
        description: Type of network to which the nic is connected
        enum: ['VxLAN', 'Zerotier']
      configuration:
        type: (KVMNICZerotierConfiguration | KVMNICVxLANConfiguration)

  KVMDisk:
    type: object
    description: Definition of a virtual disk
    properties:
      maxIOps:
        description: Maximum amount of iops the virtual disk should deliver
        type: integer
      url:
        description: URL to the disk
        type: string

  KVMDomain:
    type: object
    properties:
      name: string
      memory:
        description: Amount of memory in MiB
        type: integer
      cpu:
        description: List of virtual cpus
        type: KVMCPU[]
      nic:
        description: List of virtual nics
        type: KVMNIC[]
      disk:
        description: List of virtual disks
        type: KVMDisk[]

  Bridge:
    type: object
    properties:
       name:
         displayName: Name
         description: Name of the bridge
       config:
         displayName: Bridge config
         description: |
            '' or 'none':
              no IP is gonna be set on the link
            'dhcp':
              Run `udhcpc` on the container link, of course this will
              only work if the `bridge` is created with `dnsmasq` networking
            'CIDR':
              Assign static IP to the link

  CoreX:
    type: object
    properties:
      id:
        description: identifier
        type: string
      mounts:
        description: Mapping of mounts
        type: object
      zerotier:
        description: Zerotier network id
        type: string
        required: false
      bridges:
        type: Bridge[]
        displayName: Bridge mapping
      ports:
         type: object
         displayName: Port mMapping
/core0:
  displayName: Nodes
  get:
    displayName: List Nodes
    description: List Nodes
    responses:
      200:
        body:
          application/json:
            type: Node[]
  /domain:
    get:
      responses:
        200:
          body:
            application/json:
              type: Node[]
        description: TODO
    post:
      body:
        application/json:
          type: Domain
      responses:
        200:
          body:
            application/json:
              type: Domain
        description: TODO
    /{id}:
      delete:
        displayName: Delete Domain
        description: Delete a domain by id
      get:
        displayName: Get Domain
        description: Get detailed domain object
        responses:
          200:
            body:
              application/json:
                type: Domain
      put:
        description: TODO

  /coreX:
    get:
      responses:
        200:
          body:
            application/json:
              type: Node[]
        description: TODO
    post:
      body:
        application/json:
          type: Domain
      responses:
        200:
          body:
            application/json:
              type: Domain
        description: TODO
    /{id}:
      delete:
        displayName: Delete Domain
        description: Delete a domain by id
      get:
        displayName: Get Domain
        description: Get detailed domain object
        responses:
          200:
            body:
              application/json:
                type: Domain
      put:
        description: TODO
  /info:
    /cpu:
      get:
        responses:
          200:
            body:
              application/json:
                type: CPU[]
    /disk:
      get:
        responses:
          200:
            body:
              application/json:
                type: Disk[]
    /mem:
      get:
        responses:
          200:
            body:
              application/json:
                type: MemInfo
    /nic:
      get:
        responses:
          200:
            body:
              application/json:
                type: Nic[]
    /os:
      get:
        responses:
          200:
            body:
              application/json:
                type: OSInfo
