#%RAML 1.0
title: G8OS Stateless GRID
version: v0.1.0
mediaType:  application/json

types:

  Core0:
    type: object
    description: Core0 node in the g8os grid
    properties:
      id: string
      hostname: string

  CPUInfo:
    type: object
    description: Information about physical CPUs
    properties:
      cacheSize: integer
      coreId: string
      cores: integer
      CPUInfo: integer
      family: string
      flags: string[]
      mhz: number

  MemInfo:
    type: object
    description: Information about memory
    properties:
      active: integer
      available: integer
      buffers: integer
      cached: integer
      free: integer
      inactive: integer
      total: integer
      used: integer
      usedPercent: number
      wired: integer

  OSInfo:
    type: object
    description: Information on the operating system
    properties:
      bootTime: integer
      hostname: string
      os: string
      platform: string
      platformFamily: string
      platformVersion: string
      procs: integer
      uptime: integer
      virtualizationRole: string
      virtualizationSystem: string

  NicInfo:
    type: object
    description: Information about network interface
    properties:
      addrs:
        type: string[]
        description: List of IP Addresses
      flags: string[]
      hardwareaddr:
        type: string
        description: Hardware address of network interface
      mtu: integer
      name: string

  DiskInfo:
    type: object
    description: Information about DiskInfo
    properties:
      device:
        type: string
        description: Name of the device
      fstype:
        type: string
        description: Type of filesystem
      mountpoint:
        type: string
        description: Mountpoint of the device
      opts:
        type: string
        description: Mount options

  DiskExtInfo:
    type: object
    description: Extended disk information. See https://github.com/karelzak/util-linux/blob/master/misc-utils/lsblk.c#L156
    properties:
      alignment: integer
      discAln: integer
      discGran: integer
      discMax: integer
      discZero: integer
      fstype: string
      group: string
      hctl: string
      hotplug: integer
      kname: string
      label: string
      logSec: integer
      maj_min: string
      minIO: integer
      mode: string
      model: string
      mountpoint: string
      name: string
      optIO: integer
      owner: string
      partflags: string
      partlabel: string
      parttype: integer
      partuuid: string
      phySec: integer
      pkname: string
      ra: integer
      rand: integer
      rev: string
      rm: integer
      ro: integer
      rota: integer
      rqSize: integer
      sched: string
      serial: string
      size: integer
      state: string
      subsystems: string
      tran: string
      type: string
      uuid: string
      vendor: string
      wsame: integer
      wwn: string

  KeyValuePair:
    type: object
    description: Key value pair
    properties:
      name: string
      value: string

  PortMap:
    type: object
    description: Port mapping
    properties:
      core0port: integer
      coreXport: integer

  CoreSystem:
    type: object
    description: Arguments for a core.system command
    properties:
      name:
        description: Name of the executable that needs to be run
        type: string
      pwd:
        description: Directory in which the process needs to be started
        type: string
        required: false
      args:
        description: List of commandline arguments
        type: string[]
        required: false
      environment:
        description: Environment variables of the process
        type: KeyValuePair[]
        required: false
      stdin:
        description: Data that needs to be passed into the stdin of the started process
        type: string
        required: false

  CoreKill:
    type: object
    description: Arguments for a core.kill command
    properties:
      id:
        description: Id of the command that should be killed
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  CoreXCreate:
    type: object
    description: Arguments for a corex.create command
    properties:
      name:
        description: Hostname for the container
        type: string
      plist:
        description: Url to plist for the root filesystem
        type: string
      mounts:
        description: Key value pairs of host directory to container directory (Core0 to CoreX)
        type: KeyValuePair[]
      zerotierNetworks:
        required: false
        description: List of zerotiernetworks in which the coreX schould be present
        type: string[]
      networkBridges:
        required: false
        description: List of existing core0 bridges that should be exposed to the coreX
        type: Bridge[]
      portMaps:
        description: List of core0/coreX port mappings
        type: PortMap[]
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  CoreXTerminate:
    type: object
    description: Arguments for a corex.terminate command
    properties:
      coreX:
        description: Id of the coreX that should be terminated
        type: integer
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  BridgeCreate:
    type: object
    description: Arguments for a bridge.create command
    properties:
      name:
        description: Name for the bridge to be created
        type: string
      hwaddr:
        description: Macaddress for the bridge to be created
        type: string
        required: false
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  BridgeDelete:
    type: object
    description: Arguments for a bridge.delete command
    properties:
      name:
        description: Name for the bridge to be deleted
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  DiskMKTable:
    description: Arguments for a disk.mktable command
    properties:
      device: string
      tableType:
        description: Any value that is supported by parted mktable
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  DiskCreatePartition:
    description: |
      Arguments for a disk.mkpart command
      part_type, start & end values must be supported by the parted mkpart command
    properties:
      part_type: string
      start:
        type: integer
        description: Start sector
      end:
        type: string
        description: End sector, can be number or percentage (eg 80%)
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  DiskMount:
    description: Arguments for a disk.mount command
    properties:
      mount_options:
        description: Mount options
        type: string
      target:
        description: Location to mount disk or partition
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  Command:
    type: object
    description: Command that can be executed in the Core0/CoreX. More information can be found here https://github.com/g8os/core0/blob/master/docs/commands.md
    properties:
      id:
        description: A unique id for the command with which later on results can be retrieved. If not supplied an id will be generated.
        type: string
        required: false
      queue:
        description: Name of the queue in which this command should be enqued.
        type: string
        required: false
      tags:
        description: Metadata that can be submitted together with the command and is returned with the result.
        type: string
        required: false
      statsInterval:
        description: Stats gathering interval.
        default: 0
        required: false
        type: integer
      maxTime:
        description: Max run time of the command, if exceeded command will be killed
        default: 0
        required: false
        type: integer
      maxRestart:
        description: Max number of retries to start the command if failed before giving up.
        default: 0
        required: false
        type: integer
      recurringPeriod:
        description: If provided command is executed every X seconds.
        default: 0
        required: false
        type: integer
      logLevels:
        description: Log levels to store locally and not discard.
        type: integer[]
        default: [0]
        required: false

  WriteFile:
    type: object
    displayName: Writes a file in the targetted system
    properties:
      path:
        displayName: Path on the target system where the file should be written
        type: string
      contents:
        displayName: Contents of the file that should be written
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  DeleteFile:
    type: object
    displayName: Removes a file in the targetted system
    properties:
      path:
        displayName: Path on the target system where the file should be written
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  Process:
    type: object
    properties:
      cmd: Command
      cpu: number
      debug: string
      rss: number
      swap: number
      vms: number

  KVMCPUInfo:
    type: object
    description: Definition of a virtual CPUInfo
    properties:

  KVMNicInfoZerotierConfiguration:
    type: object
    description: Virtual NicInfo zerotier configuration
    properties:
      id:
        type: string
        description: Zerotier network id

  KVMNicInfoVxLANConfiguration:
    type: object
    description: Virtual NicInfo zerotier configuration
    properties:
      id:
        type: integer
        description: VxLAN id

  KVMNicInfo:
    type: object
    description: Definition of a virtual NicInfo
    properties:
      type:
        description: Type of network to which the NicInfo is connected
        enum: ['VxLAN', 'Zerotier']
      configuration:
        type: (KVMNicInfoZerotierConfiguration | KVMNicInfoVxLANConfiguration)

  KVMDiskInfo:
    type: object
    description: Definition of a virtual DiskInfo
    properties:
      maxIOps:
        description: Maximum amount of iops the virtual DiskInfo should deliver
        type: integer
      url:
        description: URL to the DiskInfo
        type: string

  KVMCreate:
    type: object
    properties:
      domain:
        description: Details how to setup the new KVM domain
        type: KVMDomain
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  KVMDomain:
    type: object
    properties:
      name: string
      memory:
        description: Amount of memory in MiB
        type: integer
      cpu:
        description: List of virtual CPUInfos
        type: KVMCPUInfo[]
      nic:
        description: List of virtual NicInfos
        type: KVMNicInfo[]
      disk:
        description: List of virtual DiskInfos
        type: KVMDiskInfo[]

  Bridge:
    type: object
    properties:
       name:
         description: Name of the bridge
         type: string
       config:
         description: |
            '' or 'none':
              no IP is gonna be set on the link
            'dhcp':
              Run `udhcpc` on the container link, of course this will
              only work if the `bridge` is created with `dnsmasq` networking
            'CIDR':
              Assign static IP to the link
         type: string

  MountMapping:
    type: object
    properties:
      source: string
      destination: string

  CoreX:
    type: object
    properties:
      id:
        description: identifier
        type: string
      hostname:
        description: Hostname for the CoreX
        type: string
      root_url:
        type: string
        description: The root filesystem plist
      mounts:
        description: Mapping of mounts
        type: MountMapping[]
      zerotier:
        description: Zerotier network id
        type: string
        required: false
      bridges:
        type: Bridge[]
        description: Bridge mapping
      ports:
         type: PortMap[]
         description: Maps ports from container to host

  Location:
    type: object
    description: Url to object details
    properties:
      url:
        description: Url to object details
        type: string
      id:
        description: Object id
        type: string
      name:
        description: Object name
        type: string

  CommandResult:
    type: object
    description: Result object of a command
    properties:
      id:
        description: The unique identifier with which the command was executed
        type: string
      name:
        description: The kind of command to which this result belongs to.
        enum: ['core.ping', 'core.system', 'core.kill', 'core.killall',
               'core.state', 'core.reboot', 'info.cpu', 'info.disk',
               'info.mem', 'info.nic', 'info.os', 'corex.create',
               'corex.list', 'corex.dispatch', 'corex.terminate',
               'bridge.create', 'bridge.list', 'bridge.delete',
               'disk.list', 'disk.mktable', 'disk.mkpart', 'disk.rmpart',
               'disk.mount', 'disk.umount', 'btrfs.create', 'btrfs.list',
               'btrfs.subvol_create', 'btrfs.subvol_list', 'btrfs.subvol_delete']
      level:
        description: 20 means that the data is json serialized object
        type: string
      starttime:
        description: Epoch timestamp when the command was started
        type: integer
      stdout:
        type: string
        description: Stdout of process/command
      stderr:
        type: string
        description: Stderr of process/command
      state:
        description: Status of the command
        enum: ['SCHEDULED', 'RUNNING', 'SUCCESS', 'KILLED', 'KILLED_TIMEOUT', 'FAILED']
      data:
        description: The result of executing the command
        type: string

  CoreStateResult:
    type: object
    description: Result of a core.state command
    properties:
      cpu:
        description: percentage cpu used in a core0
        type: integer
      rss: integer
      vms: integer
      swap: integer

  ZeroTierRoute:
    type: object
    description: Zerotier route
    properties:
      flags: integer
      metric: integer
      target: string
      via: string

  ZeroTier:
    type: object
    description: Zerotier details
    properties:
      allowDefault: boolean
      allowGlobal: boolean
      allowManaged: boolean
      assignedAddresses: string[]
      bridge: boolean
      broadcastEnabled: boolean
      dhcp: boolean
      mac: string
      mtu: integer
      name: string
      netconfRevision: integer
      nwid: string
      portDeviceName: string
      portError: integer
      routes: ZeroTierRoute[]
      status: string
      type:
        enum: ['PUBLIC', 'PRIVATE']

  BtrfsCreate:
    type: object
    description: Command arguments for creating btrfs filesystems
    properties:
      label:
        description: Name / label for the btrfs filesystem
        type: string
      devices:
        description: Devices that will be part of the filesystem
        type: string[]
      metadataProfile:
        enum: ['raid0', 'raid1', 'raid5', 'raid6', 'raid10', 'dup', 'single']
      dataProfile:
        enum: ['raid0', 'raid1', 'raid5', 'raid6', 'raid10', 'dup', 'single']
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  BtrfsDevice:
    type: object
    description: Devices that are assigned to a btrfs filesystem
    properties:
      id: integer
      path: string
      size: integer
      used: integer

  Btrfs:
    type: object
    description: Btrfs details
    properties:
      uuid:
        description: Unique identifier of the btrfs filesystem
        type: string
      label: string
      deviceCount: integer
      used: integer
      devices: BtrfsDevice[]

  BtrfsAddDevice:
    type: object
    description: Command to add a device to an existing Btrfs filesystem
    properties:
      path:
        displayName: DevicePath
        type: string
      command:
        description: Details how to pass the command to the core0/coreX
        type: Command
        required: false

  BtrfsSubVolume:
    type: object
    description: Btrfs subvolume details
    properties:
      gen: integer
      id: integer
      path: string
      topLevel: integer

/core0:
  description: Core0s
  get:
    description: List Core0s
    displayName: CoresList
    responses:
      200:
        body:
          application/json:
            type: Location[]
  /{id}:
    get:
      description: Get detailed information of a core0
      displayName: CoreGet
      responses:
        200:
          body:
            application/json:
              type: Core0
    /command:
      description: Commands for this Core0
      get:
        displayName: CommandsList
        description: List running commands
        responses:
          200:
            body:
              application/json:
                type: Location[]
      /{commandid}:
        description: Get status of command
        get:
          displayName: CommandGet
          description: Get details of a submitted command
          responses:
            200:
              body:
                application/json:
                  type: CommandResult
    /core:
      /ping:
        post:
          description: Execute a ping command to this Core0
          displayName: Ping
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
      /system:
        post:
          displayName: System
          description: Execute a new process  on this Core0
          body:
            application/json:
              type: CoreSystem
          responses:
            200:
              body:
                application/json:
                  type: Location
      /kill:
        post:
          displayName: Kill
          description: Kill a process / command
          body:
            application/json:
              type: CoreKill
          responses:
            200:
              body:
                application/json:
                  type: Location
      /killall:
        post:
          displayName: KillAll
          description: Kills all running commands
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
      /state:
        get:
          description: The aggregated consumption of core0 + all processes (cpu, memory, etc...)
          displayName: StateGet
          responses:
            200:
              body:
                application/json:
                  type:
                    CoreStateResult
      /reboot:
        post:
          displayName: Reboot
          description: Immediately reboot the machine.
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
    /kvm:
      get:
        description: List kvmdomain
        displayName: KVMList
        responses:
          200:
            body:
              application/json:
                type: Location[]
      post:
        displayName: KVMCreate
        description: Create a new kvmdomain
        body:
          application/json:
            type: KVMCreate
        responses:
          200:
            body:
              application/json:
                type: Location
      /{domainid}:
        delete:
          displayName: KVMDelete
          description: Delete Domain
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
        get:
          displayName: KVMGet
          description: Get detailed domain object
          responses:
            200:
              body:
                application/json:
                  type: KVMDomain
        /start:
          post:
            displayName: KVMStart
            description: Start the kvmdomain
            body:
              application/json:
                type: Command
            responses:
              200:
                body:
                  application/json:
                    type: Location
        /stop:
          post:
            displayName: KVMStop
            description: Gracefully stop the kvmdomain
            body:
              application/json:
                type: Command
            responses:
              200:
                body:
                  application/json:
                    type: Location
        /destroy:
          post:
            displayName: KVMDestroy
            description: Destroy the kvm domain
            body:
              application/json:
                type: Command
            responses:
              200:
                body:
                  application/json:
                    type: Location
        /pause:
          post:
            displayName: KVMPause
            description: Pause the kvm domain
            body:
              application/json:
                type: Command
            responses:
              200:
                body:
                  application/json:
                    type: Location
    /info:
      /cpu:
        get:
          displayName: CPUInfo
          description: Get detailed information of all CPUs in the core0
          responses:
            200:
              body:
                application/json:
                  type: CPUInfo[]
      /disk:
        get:
          displayName: DiskInfo
          description: Get detailed information of all the disks in the core0
          responses:
            200:
              body:
                application/json:
                  type: DiskInfo[]
      /mem:
        get:
          displayName: MemInfo
          description: Get detailed information about the memory in the core0
          responses:
            200:
              body:
                application/json:
                  type: MemInfo
      /nic:
        get:
          displayName: NicInfo
          description: Get detailed information about the network interfaces in the cor0
          responses:
            200:
              body:
                application/json:
                  type: NicInfo[]
      /os:
        get:
          displayName: OSInfo
          description: Get detailed information of the core0 os
          responses:
            200:
              body:
                application/json:
                  type: OSInfo
    /process:
       get:
         displayName: ProcessList
         description: Get Processes
         responses:
           200:
             body:
               application/json:
                 type: Location[]
       /{proccessid}:
         get:
           displayName: ProcessGet
           description: Get process details
           responses:
             200:
               body:
                 application/json:
                   type: Process
         delete:
           displayName: ProcessKill
           description: Kill Process
           body:
             application/json:
               type: Command
           responses:
             200:
               body:
                 application/json:
                   type: Location
    /bridge:
      post:
        displayName: BridgeCreate
        description: Creates a new bridge
        body:
          application/json:
            type: BridgeCreate
        responses:
          200:
            body:
              application/json:
                type: Location
      get:
        displayName: BridgeList
        description: List bridges
        responses:
          200:
            body:
              application/json:
                type: Location[]
      /{bridgeid}:
        get:
          displayName: BridgeGet
          description: Get bridge details
          responses:
            200:
              body:
                application/json:
                  type: Bridge
        delete:
          displayName: BridgeDelete
          description: Remove bridge
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
    /disk:
      get:
        displayName: DiskList
        description: List blockdevices present in the Core0
        responses:
          200:
            body:
              application/json:
                type: Location[]
      /{devicenameOrdiskserial}:
        get:
          displayName: DiskGet
          description: Get disk details
          responses:
            200:
              body:
                application/json:
                  type: DiskExtInfo
        /mktable:
          post:
            displayName: DiskMakeTable
            description: Creates a partition table on a blockdevice
            body:
              application/json:
                type: DiskMKTable
            responses:
              200:
                body:
                  application/json:
                    type: Location
        /mount:
          post:
            displayName: DiskMount
            description: Mounts the disk
            body:
              application/json:
                type: DiskMount
            responses:
              200:
                body:
                  application/json:
                    type: Location
        /umount:
          post:
            displayName: DiskUmount
            description: Unmount the disk
            body:
              application/json:
                type: Command
            responses:
              200:
                body:
                  application/json:
                    type: Location
        /partitions:
          post:
            displayName: DiskPartitionCreate
            description: Create a new partition
            body:
              application/json:
                type: DiskCreatePartition
            responses:
              200:
                body:
                  application/json:
                    type: Location
          get:
            displayName: DiskPartitionsList
            description: Lists partitions
            responses:
              200:
                body:
                  application/json:
                    type: Location[]
          /{partitionid}:
            get:
              displayName: DiskPartitionGet
              description: Gets partition info. (TODO Needs further speccing)
              responses:
                200:
                  body:
                    application/json:
                      type: string # Needs further speccing
            delete:
              displayName: DiskPartitionDelete
              description: Removes a partition
              body:
                application/json:
                  type: Command
              responses:
                200:
                  body:
                    application/json:
                      type: Location
            /mount:
              post:
                displayName: DiskPartitionMount
                description: Mounts the partition
                body:
                  application/json:
                    type: DiskMount
                responses:
                  200:
                    body:
                      application/json:
                        type: Location
            /umount:
              post:
                displayName: DiskPartitionUmount
                description: Unmount the partition
                body:
                  application/json:
                    type: Command
                responses:
                  200:
                    body:
                      application/json:
                        type: Location
    /filesystem:
      post:
        description: Upload file to Core0
        displayName: FileUpload
        body:
          application/json:
            type: WriteFile
        responses:
          200:
            body:
              application/json:
                type: Location
      get:
        description: Download file from Core0
        displayName: FileDownload
        queryString:
          properties:
            path: string
        responses:
          200:
            body:
              application/octet-stream:
      delete:
        description: Delete file from Core0
        displayName: FileDelete
        body:
          application/json:
            type: DeleteFile
        responses:
          200:
            body:
              application/json:
                type: Location
    /zerotier:
      get:
        displayName: ZerotierList
        description: List running zerotier networks
        responses:
          200:
            body:
              application/json:
                type: Location[]
      /{zerotierid}:
        get:
          displayName: ZerotierGet
          description: Get zerotier network details
          responses:
            200:
              body:
                application/json:
                  type: ZeroTier
        post:
          displayName: ZerotierJoin
          description: Join zerotier network
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
        delete:
          displayName: ZerotierUnjoin
          description: Delete zerotier network
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
    /btrfs:
      get:
        displayName: BtrfsList
        description: List btrfs filesystems
        responses:
          200:
            body:
              application/json:
                type: Location[]
      post:
        displayName: BtrfsCreate
        description: Create a new btrfs filesystem
        body:
          application/json:
            type: BtrfsCreate
        responses:
          200:
            body:
              application/json:
                type: Location
      /{btrfsUuid}:
        get:
          description: Get btrfs filesystem details
          displayName: BtrfsGet
          responses:
            200:
              body:
                application/json:
                  type: Btrfs
        post:
          description: Add a device to an existing btrfs filesystem
          displayName: BtrfsAddDevice
          body:
            application/json:
              type: BtrfsAddDevice
          responses:
            200:
              body:
                application/json:
                  type: Location
        /subvolumes:
          get:
            description: Btrfs List Subvolumes
            displayName: BtrfsSubvolList
            responses:
              200:
                body:
                  application/json:
                    type: Location[]
          /{subvolumepath}:
            get:
              displayName: BtrfsSubvolGet
              description: Gets subvolume details
              responses:
                200:
                  body:
                    application/json:
                      type: BtrfsSubVolume
            post:
              displayName: BtrfsSubvolCreate
              description: Create a new subvolume
              body:
                application/json:
                  type: Command
              responses:
                200:
                  body:
                    application/json:
                      type: Location
            delete:
              displayName: BtrfsSubvolDelete
              description: Delete subvolume
              body:
                application/json:
                  type: Command
              responses:
                200:
                  body:
                    application/json:
                      type: Location
    /coreX:
      get:
        displayName: CoreXList
        description: List running CoreXses
        responses:
          200:
            body:
              application/json:
                type: Location[]
      post:
        displayName: CoreXCreate
        description: Create a new CoreX
        body:
          application/json:
            type: CoreXCreate
        responses:
          200:
            body:
              application/json:
                type: Location
      /{coreXid}:
        delete:
          displayName: CoreXDelete
          description: Delete CoreX instance
          body:
            application/json:
              type: Command
          responses:
            200:
              body:
                application/json:
                  type: Location
        get:
          displayName: CoreXGet
          description: Get CoreX
          responses:
            200:
              body:
                application/json:
                  type: CoreX
        /command:
          description: Commands for this Core0
          get:
            description: List running commands
            displayName: CXCommandsList
            responses:
              200:
                body:
                  application/json:
                    type: Location[]
          /{commandid}:
            get:
              displayName: CXCommandGet
              description: Get status of command
              responses:
                200:
                  body:
                    application/json:
                      type: CommandResult
        /core:
          /ping:
            post:
              description: Execute a ping command to this CoreX
              displayName: CXPing
              body:
                application/json:
                  type: Command
              responses:
                200:
                  body:
                    application/json:
                      type: Location
          /system:
            post:
              displayName: CXSystem
              description: Execute a new process  on this CoreX
              body:
                application/json:
                  type: CoreSystem
              responses:
                200:
                  body:
                    application/json:
                      type: Location
          /kill:
            post:
              displayName: CXKill
              description: Kill a process / command
              body:
                application/json:
                  type: CoreKill
              responses:
                200:
                  body:
                    application/json:
                      type: Location
          /killall:
            post:
              displayName: CXKillAll
              description: Kills all running commands
              body:
                application/json:
                  type: Command
              responses:
                200:
                  body:
                    application/json:
                      type: Location
          /state:
            get:
              description: The aggregated consumption of coreX + all processes (cpu, memory, etc...)
              displayName: CXStateGet
              responses:
                200:
                  body:
                    application/json:
                      type:
                        CoreStateResult
        /info:
          /cpu:
            get:
              displayName: CXCPUInfo
              description: Get detailed information about the CPUs in the coreX
              responses:
                200:
                  body:
                    application/json:
                      type: CPUInfo[]
          /mem:
            get:
              displayName: CXMemInfo
              description: Get detailed information about the memory of the coreX
              responses:
                200:
                  body:
                    application/json:
                      type: MemInfo
          /nic:
            get:
              displayName: CXNicInfo
              description: Get detailed information about the network interface of the coreX
              responses:
                200:
                  body:
                    application/json:
                      type: NicInfo[]
          /os:
            get:
              displayName: CXOSInfo
              description: Get detailed information about the coreX os
              responses:
                200:
                  body:
                    application/json:
                      type: OSInfo
        /process:
           get:
             displayName: CXProcessList
             description: Get Processes
             responses:
               200:
                 body:
                   application/json:
                     type: Location[]
           /{proccessid}:
             get:
               displayName: CXProcessGet
               description: Get process details
               responses:
                 200:
                   body:
                     application/json:
                       type: Process
             delete:
               displayName: CXProcessKill
               description: Kill Process
               body:
                 application/json:
                   type: Command
               responses:
                 200:
                   body:
                     application/json:
                       type: Location
        /filesystem:
          post:
            description: Upload file to Core0
            displayName: CXFileUpload
            body:
              application/json:
                type: WriteFile
            responses:
              200:
                body:
                  application/json:
                    type: Location
          get:
            description: Download file from Core0
            displayName: CXFileDownload
            queryString:
              properties:
                path: string
            responses:
              200:
                body:
                  application/octet-stream:
          delete:
            description: Delete file from Core0
            displayName: CXFileDelete
            body:
              application/json:
                type: DeleteFile
            responses:
              200:
                body:
                  application/json:
                    type: Location
