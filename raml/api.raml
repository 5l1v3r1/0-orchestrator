#%RAML 1.0
title: G8OS Stateless GRID API
version: v0.1.0
mediaType:  application/json


types:
  Node:
    type: object
    properties:
      id: string
      hostname: string


  CPU:
    type: object
    properties:
      cacheSize: integer
      coreId: integer
      cores: integer
      cpu: integer
      family: string
      flags: string[]
      mhz: number

  MemInfo:
    type: object
    properties:
      active: integer
      available: integer
      buffers: integer
      cached: integer
      free: integer
      inactive: integer
      total: integer
      used: integer
      usedPercent: number
      wired: integer

  OSInfo:
    type: object
    properties:
      bootTime: integer
      hostname: string
      os: string
      platform: string
      platformFamily: string
      platformVersion: string
      procs: integer
      uptime: integer
      virtualizationRole: string
      virtualizationSystem: string

  Nic:
    type: object
    description: Information about network interface
    properties:
      addrs:
        type: string[]
        description: List of IP Addresses
      flags: string[]
      hardwareaddr:
        type: string
        description: Hardware address of network interface
      mtu: integer
      name: string

  Disk:
    type: object
    description: Information about disk
    properties:
      device:
        type: string
        description: Name of the device
      fstype:
        type: string
        description: Type of filesystem
      mountpoint:
        type: string
        description: Mountpoint of the device
      opts:
        type: string
        description: Mount options

  ProcessCommand:
    type: object
    properties:
      arguments: string[]
      name: string
      command: string
      id: string
      queue: string
      tags: string

  Process:
    type: object
    properties:
      cmd: ProcessCommand
      cpu: number
      debug: string
      rss: number
      swap: number
      vms: number

  KVMCPU:
    type: object
    description: Definition of a virtual cpu
    properties:

  KVMNICZerotierConfiguration:
    type: object
    description: Virtual nic zerotier configuration
    properties:
      id:
        type: string
        description: Zerotier network id

  KVMNICVxLANConfiguration:
    type: object
    description: Virtual nic zerotier configuration
    properties:
      id:
        type: integer
        description: VxLAN id

  KVMNIC:
    type: object
    description: Definition of a virtual nic
    properties:
      type:
        description: Type of network to which the nic is connected
        enum: ['VxLAN', 'Zerotier']
      configuration:
        type: (KVMNICZerotierConfiguration | KVMNICVxLANConfiguration)

  KVMDisk:
    type: object
    description: Definition of a virtual disk
    properties:
      maxIOps:
        description: Maximum amount of iops the virtual disk should deliver
        type: integer
      url:
        description: URL to the disk
        type: string

  KVMDomain:
    type: object
    properties:
      name: string
      memory:
        description: Amount of memory in MiB
        type: integer
      cpu:
        description: List of virtual cpus
        type: KVMCPU[]
      nic:
        description: List of virtual nics
        type: KVMNIC[]
      disk:
        description: List of virtual disks
        type: KVMDisk[]

  Bridge:
    type: object
    properties:
       name:
         displayName: Name
         description: Name of the bridge
       config:
         displayName: Bridge config
         description: |
            '' or 'none':
              no IP is gonna be set on the link
            'dhcp':
              Run `udhcpc` on the container link, of course this will
              only work if the `bridge` is created with `dnsmasq` networking
            'CIDR':
              Assign static IP to the link

  MountMapping:
    properties:
      source: string
      destination: string

  PortMapping:
    properties:
      source: integer
      destination: integer

  CoreX:
    type: object
    properties:
      id:
        description: identifier
        type: string
      hostname:
        description: Hostname for the CoreX
        type: string
      root_url:
        type: string
        description: The root filesystem plist
      mounts:
        description: Mapping of mounts
        type: MountMapping[]
      zerotier:
        description: Zerotier network id
        type: string
        required: false
      bridges:
        type: Bridge[]
        displayName: Bridge mapping
      ports:
         type: PortMapping[]
         displayName: Port Mapping
         description: Maps ports from container to host
/core0:
  displayName: Nodes
  get:
    displayName: List Nodes
    description: List Nodes
    responses:
      200:
        body:
          application/json:
            type: Node[]
  /{id}:
    /kvmdomain:
      get:
        responses:
          200:
            body:
              application/json:
                type: Node[]
      post:
        body:
          application/json:
            type: KVMDomain
        responses:
          200:
            body:
              application/json:
                type: KVMDomain
      /{id}:
        delete:
          displayName: Delete Domain
          description: Delete a domain by id
        get:
          displayName: Get Domain
          description: Get detailed domain object
          responses:
            200:
              body:
                application/json:
                  type: KVMDomain
        put:
          description: TODO

    /coreX:
      get:
        responses:
          200:
            body:
              application/json:
                type: CoreX[]
      post:
        body:
          application/json:
            type: CoreX
        responses:
          200:
            body:
              application/json:
                type: CoreX
      /{id}:
        delete:
          displayName: Delete CoreX instance
          description: Delete a CoreX instance its id
        get:
          displayName: Get Corex
          description: Get detailed CoreX object
          responses:
            200:
              body:
                application/json:
                  type: CoreX
    /info:
      /cpu:
        get:
          responses:
            200:
              body:
                application/json:
                  type: CPU[]
      /disk:
        get:
          responses:
            200:
              body:
                application/json:
                  type: Disk[]
      /mem:
        get:
          responses:
            200:
              body:
                application/json:
                  type: MemInfo
      /nic:
        get:
          responses:
            200:
              body:
                application/json:
                  type: Nic[]
      /os:
        get:
          responses:
            200:
              body:
                application/json:
                  type: OSInfo

    /process:
       get:
         displayName: Get Processes
         description: Get processes
         responses:
           200:
             body:
               application/json:
                 type: Process[]
       /{id}:
         delete:
           displayName: Kill Process
           description: Kill Process
           responses:
             204:
